{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 215, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 236, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/adjust-description-style.ts"],"sourcesContent":["// AdjustDescriptionStyle.ts\n'use server';\n\n/**\n * @fileOverview Adjusts the style and length of text descriptions using AI.\n *\n * Exports:\n * - `adjustDescriptionStyle`: Function to adjust the style and length of a given text description.\n * - `AdjustDescriptionStyleInput`: Input type for the `adjustDescriptionStyle` function.\n * - `AdjustDescriptionStyleOutput`: Output type for the `adjustDescriptionStyle` function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AdjustDescriptionStyleInputSchema = z.object({\n  text: z.string().describe('The text description to adjust.'),\n  style: z\n    .string()\n    .describe(\n      'The desired style for the description (e.g., formal, concise, creative).' \n    ),\n  maxLength: z\n    .number()\n    .optional()\n    .describe(\n      'The maximum length of the adjusted description. If not provided, no length constraint is applied.'\n    ),\n});\n\nexport type AdjustDescriptionStyleInput = z.infer<typeof AdjustDescriptionStyleInputSchema>;\n\nconst AdjustDescriptionStyleOutputSchema = z.object({\n  adjustedText: z.string().describe('The adjusted text description.'),\n});\n\nexport type AdjustDescriptionStyleOutput = z.infer<typeof AdjustDescriptionStyleOutputSchema>;\n\nexport async function adjustDescriptionStyle(\n  input: AdjustDescriptionStyleInput\n): Promise<AdjustDescriptionStyleOutput> {\n  return adjustDescriptionStyleFlow(input);\n}\n\nconst adjustDescriptionStylePrompt = ai.definePrompt({\n  name: 'adjustDescriptionStylePrompt',\n  input: {schema: AdjustDescriptionStyleInputSchema},\n  output: {schema: AdjustDescriptionStyleOutputSchema},\n  prompt: `You are an AI assistant that adjusts the style and length of text descriptions based on user preferences.\n\n  Original Text: {{{text}}}\n  Desired Style: {{{style}}}\n  Maximum Length: {{#if maxLength}}{{{maxLength}}} characters{{else}}No limit{{/if}}\n\n  Adjust the text to match the desired style and length. Return only the adjusted text.\n  `, // Updated prompt\n});\n\nconst adjustDescriptionStyleFlow = ai.defineFlow(\n  {name: 'adjustDescriptionStyleFlow', inputSchema: AdjustDescriptionStyleInputSchema, outputSchema: AdjustDescriptionStyleOutputSchema},\n  async input => {\n    const {output} = await adjustDescriptionStylePrompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":"AAAA,4BAA4B;;;;;;AAG5B;;;;;;;CAOC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC1B,OAAO,uIAAA,CAAA,IAAC,CACL,MAAM,GACN,QAAQ,CACP;IAEJ,WAAW,uIAAA,CAAA,IAAC,CACT,MAAM,GACN,QAAQ,GACR,QAAQ,CACP;AAEN;AAIA,MAAM,qCAAqC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAClD,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC;AAIO,eAAe,uCAAoB,GAApB,uBACpB,KAAkC;IAElC,OAAO,2BAA2B;AACpC;AAEA,MAAM,+BAA+B,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IACnD,MAAM;IACN,OAAO;QAAC,QAAQ;IAAiC;IACjD,QAAQ;QAAC,QAAQ;IAAkC;IACnD,QAAQ,CAAC;;;;;;;EAOT,CAAC;AACH;AAEA,MAAM,6BAA6B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC9C;IAAC,MAAM;IAA8B,aAAa;IAAmC,cAAc;AAAkC,GACrI,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,6BAA6B;IACpD,OAAO;AACT;;;IAzBoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 304, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 355, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAoR,GACjT,kDACA","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAgQ,GAC7R,8BACA","debugId":null}},
    {"offset": {"line": 383, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}